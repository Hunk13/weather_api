version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.development
    image: weather_api
    restart: "no"
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      - postgresql
      - otel-collector
    volumes:
      - .:/rails:cached

  postgresql:
    image: postgres
    restart: "no"
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgresdb:/var/lib/postgresql/data/

  otel-collector:
    image: otel/opentelemetry-collector:0.91.0
    command: [ "--config=/etc/collector-config.yaml" ]
    volumes:
      - ./docker/collector-config.yaml:/etc/collector-config.yaml
    depends_on:
      - tempo
    ports:
      - 4317:4317
      - 4318:4318

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo.yaml:/etc/tempo.yaml
      - ./docker-data/tempo-data:/tmp/tempo
    ports:
      - 14268  # jaeger ingest
      - 3200   # tempo
      - 4317   # otlp grpc
      - 4318   # otlp http
      - 9411   # zipkin

  prometheus:
    image: quay.io/prometheus/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./docker/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.5.15
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./docker/grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - 4000:4000

volumes:
  postgresdb: